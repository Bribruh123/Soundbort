name: CI
description: Lint code, run tests and build and push the docker image to GHCR.

on:
  push:
    branches:
      - main
      - stable
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  lint:
    name: Lint, type-check and test code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint ESLint
        run: npm run lint

      - name: Lint TSC
        run: npm run build -- --noEmit

      - name: Tests
        run: npm test --if-present

  docker-build:
    name: Build and push the docker image to GHCR.
    runs-on: ubuntu-latest

    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Repo Name
        run: |
          echo "REPO_NAME=${REGISTRY}/${IMAGE_NAME,,}" >>${GITHUB_ENV}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REPO_NAME }}
          # https://github.com/marketplace/actions/docker-metadata-action#latest-tag
          # "latest" tag will be generated by "type=semver,pattern="
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to ${{ env.REGISTRY }} container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
